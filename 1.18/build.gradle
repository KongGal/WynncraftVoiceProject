plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
}

base {
    archivesName = project.mod_name.replaceAll("\\s", "-") + "-fabric"
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url "https://maven.parchmentmc.org/" }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.parchment_version}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}+${project.minecraft_version}"

    // Development dependencies
    modRuntimeOnly "me.djtheredstoner:DevAuth-fabric:${project.devauth_version}"

    // Optional dependencies
    modApi("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-loader")
        exclude(group: "net.fabricmc.fabric-api")
    }

    modApi("com.terraformersmc:modmenu:${mod_menu_version}") {
        exclude(group: "net.fabricmc.fabric-loader")
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    var replaceProperties = [
            mod_version                : version,
            mod_id                     : maven_group,
            mod_name                   : mod_name,
            minecraft_version          : minecraft_version,
            fabric_loader_version      : fabric_loader_version,
            fabric_api_version         : fabric_api_version,
            cloth_config_version       : cloth_config_version,
    ]
    inputs.properties replaceProperties

    filesMatching("fabric.mod.json") {
        expand replaceProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
    options.encoding = 'UTF-8'
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

sourceSets {
    main {
        resources {
            srcDirs "../shared/resources/"
        }
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName}"}
    }
}
